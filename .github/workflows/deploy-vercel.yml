name: Deploy to Vercel

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      deploy_to_production:
        description: "Force redeploy to production?"
        required: false
        default: false
        type: boolean
      deploy_preview:
        description: "Deploy preview?"
        required: true
        default: false
        type: boolean

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Lint code (if you have linting)
        run: npm run lint || echo "No lint script found, skipping..."

      - name: Build project
        run: npm run build

      - name: Verify build output
        run: |
          if [ ! -d "dist" ]; then
            echo "❌ Build failed - dist directory not found"
            exit 1
          fi
          echo "✅ Build successful - dist directory created"
          ls -la dist/

  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    environment: staging
    needs: build
    if: github.event_name == 'workflow_dispatch' && inputs.deploy_preview == true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel environment information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build project artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy preview to Vercel
        id: deploy-preview
        run: |
          url=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
          echo "preview-url=$url" >> $GITHUB_OUTPUT
          echo "🚀 Preview deployed to: $url"

      - name: Comment preview URL on PR
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `🚀 **Preview Deployment Ready!**
              
              ✅ Your ExpenseAI waitlist preview is live: ${{ steps.deploy-preview.outputs.preview-url }}
              
              This preview will update automatically with new commits to this PR.`
            })

  deploy-production:
    name: Deploy Production
    runs-on: ubuntu-latest
    environment: staging
    needs: build
    if: |
      github.ref == 'refs/heads/main' &&
      (github.event_name == 'push' || 
       (github.event_name == 'workflow_dispatch' && inputs.deploy_to_production == true))

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel environment information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build project artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to production
        id: deploy-prod
        run: |
          url=$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }})
          echo "production-url=$url" >> $GITHUB_OUTPUT
          echo "🎉 Production deployed to: $url"

      - name: Create deployment status
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: 'success',
              target_url: '${{ steps.deploy-prod.outputs.production-url }}',
              description: 'Deployment successful',
              context: 'vercel/deployment'
            })

  lighthouse:
    name: Lighthouse Performance Audit
    runs-on: ubuntu-latest
    environment: staging
    needs: deploy-production
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Wait for deployment to be ready
        run: sleep 30

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            https://${{ secrets.VERCEL_PROJECT_ID }}.vercel.app
          configPath: "./lighthouserc.json"
          uploadArtifacts: true
          temporaryPublicStorage: true

      - name: Comment Lighthouse results
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            try {
              const results = JSON.parse(fs.readFileSync('./lhci_reports/manifest.json'));
              const summary = results[0].summary;
              
              github.rest.repos.createCommitStatus({
                owner: context.repo.owner,
                repo: context.repo.repo,
                sha: context.sha,
                state: summary.performance >= 0.8 ? 'success' : 'failure',
                description: `Performance: ${Math.round(summary.performance * 100)}%`,
                context: 'lighthouse/performance'
              });
            } catch (error) {
              console.log('Lighthouse results not available yet');
            }
